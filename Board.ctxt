#BlueJ class context
comment0.params=
comment0.target=Board()
comment1.params=g
comment1.target=void\ paintComponent(java.awt.Graphics)
comment1.text=\nDraws\ the\ board\ and\ the\ pieces\ onto\ the\ screen.\ \n
comment10.params=r\ c\ v
comment10.target=void\ placePiece(int,\ int,\ boolean)
comment10.text=\nAllows\ the\ player\ to\ place\ a\ piece\ onto\ the\ board\ only\ if\ the\ square\ that\ is\ clicked\ is\ of\ a\ valid\ type\ \n
comment11.params=r\ c
comment11.target=Square\ getSquare(int,\ int)
comment11.text=\n\ Returns\ a\ square\ at\ a\ specified\ row\ and\ column\n
comment12.params=v
comment12.target=void\ setValid(boolean)
comment12.text=\n\ Mutator\ method\ to\ alter\ with\ valid\ at\ any\ specified\ moment\n
comment13.params=
comment13.target=boolean\ getValid()
comment13.text=\n\ Returns\ true\ if\ there\ is\ a\ valid\ move.\n
comment14.params=turn\ ro\ co\ yDir\ xDir
comment14.target=boolean\ flip(int,\ int,\ int,\ int,\ int)
comment14.text=\n\ Flips\ the\ pieces\ of\ a\ different\ type\ after\ a\ piece\ is\ placed.\ This\ recursive\ method\ starts\ from\ the...\ and\ ends\ when\ it\ is\ runs\ into\ a\ piece\n\ that\ has\ just\ been\ placed.\n
comment15.params=turn\ ro\ co\ yDir\ xDir
comment15.target=boolean\ look(int,\ int,\ int,\ int,\ int)
comment15.text=\nLooks\ through\ the\ whole\ direction\ to\ check\ if\ there\ is\ a\ valid\ move\ to\ be\ made\ and\ if\ the\ space\ at\ the\ end\ of\ the\ look\ method\ is\ empty\nSince\ the\ square\ types\ are\ a\ 2\ dimensional\ array\ of\ squares\ in\ a\ certain\ row\ and\ column\ the\ yDirection\ acts\ in\ the\ vertical\ndirection\ meaning\ that\ it\ changes\ the\ row,\ while\ the\ xDirection(xDir)\ changes\ the\ column.\ This\ method\ is\ recursive\ and\ is\ always\ \nchecking\ as\ long\ as\ the\ next\ piece\ in\ the\ direction\ of\ checking\ is\ of\ a\ type\ that\ allows\ it\ to\ become\ flipped.\ The\ base\ case\ is\ \nWhen\ the\ method\ gets\ to\ the\ end\ of\ the\ pieces\ to\ be\ flipped\ and\ the\ next\ square\ is\ empty.\n\n
comment16.params=turn
comment16.target=void\ lookForMove(int)
comment16.text=\n\ Looks\ for\ a\ legal\ move\ in\ all\ of\ the\ directions.\n
comment17.params=
comment17.target=void\ resetGame()
comment17.text=\n\ Resets\ the\ game\ and\ sets\ everything\ to\ the\ default\ setting.\n
comment2.params=r\ c
comment2.target=boolean\ validMove(int,\ int)
comment2.text=\n\ Makes\ sure\ that\ the\ move\ is\ valid.\ \n
comment3.params=r\ c
comment3.target=boolean\ inBounds(int,\ int)
comment3.text=\n\ Always\ checks\ to\ make\ sure\ that\ the\ piece\ in\ a\ certain\ row\ and\ column\ is\ still\ in\ bounds.\n
comment4.params=
comment4.target=void\ setPieceNumber()
comment4.text=\nThe\ piece\ number\ is\ reseted\ to\ zero\ everytime\ since\ there\ is\ always\ a\ possibility\ that\ the\ scores\ have\ changed.\ Since\ the\ whitePieces,\nand\ blackPieces\ are\ static\ values,\ this\ allows\ to\ alter\ with\ them\ starting\ our\ count\ at\ zero\ everytime.\n
comment5.params=
comment5.target=int\ getWhitePieces()
comment5.text=\nReturns\ the\ number\ of\ white\ pieces.\ \n
comment6.params=
comment6.target=int\ getBlackPieces()
comment6.text=\nReturns\ the\ number\ of\ black\ pieces.\ \n
comment7.params=
comment7.target=boolean\ getDone()
comment8.params=
comment8.target=void\ changeTurn()
comment8.text=\nChanges\ the\ current\ turn\ and\ also\ updates\ the\ valid\ squares\ for\ the\ next\ turn.\n
comment9.params=
comment9.target=int\ getTurn()
comment9.text=\n\ Returns\ the\ current\ turn\n
numComments=18
